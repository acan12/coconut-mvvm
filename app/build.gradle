plugins {
    id 'com.android.application'
    id 'kotlin-android'
    id 'kotlin-kapt'
    id 'dagger.hilt.android.plugin'
}

android {
    compileSdkVersion 30

    defaultConfig {
        applicationId "app.beelabs.com.coconut_mvvm.sample"
        minSdkVersion 23
        targetSdkVersion 30
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        debug {
            debuggable true
        }
        release {
            debuggable false
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    buildFeatures {
        viewBinding true
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
}

dependencies {

    def lifecycle_version = '2.2.0'
    def retrofit_version = '2.9.0'
    def hilt_version = '2.38.1'
    def activity_version = '1.3.0'
    def coroutinesVersion = '1.4.3'
//    def dagger_version = '2.39'
//    def dagger_hilt_version = '2.39'

    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    implementation 'androidx.core:core-ktx:1.3.1'
    implementation("androidx.constraintlayout:constraintlayout:2.1.0")
    implementation 'androidx.appcompat:appcompat:1.3.1'
    implementation 'com.google.android.material:material:1.4.0'
    implementation "androidx.activity:activity-ktx:$activity_version"

    // HILT
    implementation "com.google.dagger:hilt-android:$hilt_version"
    kapt "com.google.dagger:hilt-compiler:$hilt_version"

    // Lifecycle Extensions
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:$lifecycle_version"
    implementation "androidx.lifecycle:lifecycle-livedata-ktx:$lifecycle_version"

    // Caroutine
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:$coroutinesVersion"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$coroutinesVersion"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-play-services:$coroutinesVersion"

    // Retrofit
    implementation "com.squareup.retrofit2:retrofit:$retrofit_version" // Retrofit
    implementation "com.squareup.retrofit2:converter-jackson:$retrofit_version" // Jackson as parser engine for retrofit

    // RX [Optional]
    implementation 'io.reactivex.rxjava2:rxjava:2.1.1'   // RX
    implementation 'io.reactivex.rxjava2:rxandroid:2.0.1' // RX
    implementation 'com.jakewharton.retrofit:retrofit2-rxjava2-adapter:1.0.0'
//    implementation 'io.reactivex.rxjava3:rxandroid:3.0.0'   // RX
//    implementation 'io.reactivex.rxjava3:rxjava:3.0.0' // RX
//    implementation 'com.squareup.retrofit2:adapter-rxjava2:2.9.0'

    // Dagger
//    implementation "com.google.dagger:dagger:$dagger_version"  // Dagger 2
//    annotationProcessor "com.google.dagger:dagger-compiler:$dagger_version" // Dagger 2
    compileOnly "javax.annotation:jsr250-api:1.0"

    // OKHTTP_Request
    // define a BOM and its version
    implementation(platform("com.squareup.okhttp3:okhttp-bom:4.9.2"))
    // define any required OkHttp artifacts without version
    implementation("com.squareup.okhttp3:okhttp")
    implementation("com.squareup.okhttp3:logging-interceptor")

    implementation project(path: ':coconut-mvvm-code')
//    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:1.3.9"

    // Testing
    testImplementation 'junit:junit:4.+'
    androidTestImplementation 'androidx.test.ext:junit:1.1.2'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'
}

//kapt {
//    correctErrorTypes true
//}